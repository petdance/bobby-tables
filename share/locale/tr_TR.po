#
# Burak Gürsoy <burak@cpan.org>, 2011.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2011-08-17 02:18+0300\n"
"PO-Revision-Date: 2011-09-18 00:47+0100\n"
"Last-Translator: Burak Gürsoy <burak@cpan.org>\n"
"Language-Team: Turkish <>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: s/plsql.textile.tt2:138
#: s/plsql.textile.tt2:189
msgid ""
"    FOR i IN v_users.FIRST .. v_users.LAST LOOP\n"
"      PIPE ROW(v_users(i));\n"
"    END LOOP;"
msgstr ""
"    FOR i IN v_users.FIRST .. v_users.LAST LOOP\n"
"      PIPE ROW(v_users(i));\n"
"    END LOOP;"

#: s/plsql.textile.tt2:142
#: s/plsql.textile.tt2:193
msgid ""
"    RETURN;\n"
"END;\n"
"/\n"
"</code>"
msgstr ""
"    RETURN;\n"
"END;\n"
"/\n"
"</code>"

#: s/scheme.textile.tt2:5
msgid "\"CHICKEN\":http://www.call-with-current-continuation.org/ is a compiler for \"Scheme\":http://schemers.org/"
msgstr "\"CHICKEN\":http://www.call-with-current-continuation.org/ \"Scheme\" iÃ§in bir derleyicidir:http://schemers.org/"

#: s/java.textile.tt2:11
msgid "\"Hibernate\":http://docs.jboss.org/hibernate/stable/core/reference/en/html/objectstate.html#objectstate-querying-executing-parameters also supports prepared statements."
msgstr "\"Hibernate\":http://docs.jboss.org/hibernate/stable/core/reference/en/html/objectstate.html#objectstate-querying-executing-parameters hazÄ±rlanmÄ±Å ifadeleride destekler."

#: s/php.textile.tt2:47
msgid ""
"$sth = $dbh->prepare('SELECT * FROM users WHERE email = :email');\n"
"$sth->execute(array(':email' => $email));\n"
"</code>"
msgstr ""
"$sth = $dbh->prepare('SELECT * FROM users WHERE email = :email');\n"
"$sth->execute(array(':email' => $email));\n"
"</code>"

#: s/index.textile.tt2:59
msgid ""
"* \"Peter Ward\":http://identi.ca/flowblok/\n"
"* \"David Wheeler\":http://justatheory.com\n"
"* Scott Rose\n"
"* Erik Osheim\n"
"* Russ Sivak\n"
"* \"Iain Collins\":http://iaincollins.com\n"
"* Kristoffer Sall Hansen\n"
"* Jeff Emminger\n"
"* \"Travis Swicegood\":http://www.travisswicegood.com/\n"
"* \"Will Coleda\":http://www.coleda.com/users/coke/\n"
"* Kai Baesler\n"
"* Mike Markley\n"
"* \"Michael Schwern\":http://schwern.dreamhosters.com/\n"
"* \"Jeana Clark\":http://jeanaclark.org/\n"
"* \"Lars DÉªá´á´á´á´á´¡\":http://search.cpan.org/~daxim/\n"
"* \"Jani Hur\":http://www.jani-hur.net"
msgstr ""
"* \"Peter Ward\":http://identi.ca/flowblok/\n"
"* \"David Wheeler\":http://justatheory.com\n"
"* Scott Rose\n"
"* Erik Osheim\n"
"* Russ Sivak\n"
"* \"Iain Collins\":http://iaincollins.com\n"
"* Kristoffer Sall Hansen\n"
"* Jeff Emminger\n"
"* \"Travis Swicegood\":http://www.travisswicegood.com/\n"
"* \"Will Coleda\":http://www.coleda.com/users/coke/\n"
"* Kai Baesler\n"
"* Mike Markley\n"
"* \"Michael Schwern\":http://schwern.dreamhosters.com/\n"
"* \"Jeana Clark\":http://jeanaclark.org/\n"
"* \"Lars DÉªá´á´á´á´á´¡\":http://search.cpan.org/~daxim/\n"
"* \"Jani Hur\":http://www.jani-hur.net"

#: s/index.textile.tt2:32
msgid ""
"* \"SQL Injection Myths and Fallacies\":http://www.slideshare.net/billkarwin/sql-injection-myths-and-fallacies\n"
"* \"http://www.schneier.com/blog/archives/2008/10/how_to_write_in.html\":http://www.schneier.com/blog/archives/2008/10/how_to_write_in.html\n"
"* \"http://st-curriculum.oracle.com/tutorial/SQLInjection/\":http://st-curriculum.oracle.com/tutorial/SQLInjection/"
msgstr ""
"* \"SQL AÅÄ±sÄ± Efsaneleri ve YanÄ±lgÄ±larÄ± (Ä°ngilizce)\":http://www.slideshare.net/billkarwin/sql-injection-myths-and-fallacies\n"
"* \"http://www.schneier.com/blog/archives/2008/10/how_to_write_in.html (Ingilizce)\":http://www.schneier.com/blog/archives/2008/10/how_to_write_in.html\n"
"* \"http://st-curriculum.oracle.com/tutorial/SQLInjection/ (Ingilizce)\":http://st-curriculum.oracle.com/tutorial/SQLInjection/"

#: s/dotnet.textile.tt2:9
msgid ""
"* \"SQL injection\":http://msdn.microsoft.com/en-us/library/ms161953.aspx on MSDN\n"
"* \"SQL Injection and how to avoid it\":http://blogs.msdn.com/tom/archive/2008/05/29/sql-injection-and-how-to-avoid-it.aspx on the ASP.NET Debugging blog"
msgstr ""
"* \"SQL aşısı\":http://msdn.microsoft.com/en-us/library/ms161953.aspx (MSDN)\n"
"* \"SQL aşısıve kaçınma a yolları\":http://blogs.msdn.com/tom/archive/2008/05/29/sql-injection-and-how-to-avoid-it.aspx on the ASP.NET Debugging blog"

#: s/dotnet.textile.tt2:5
msgid "* \"SqlCommand.Prepare\":http://msdn.microsoft.com/en-us/library/system.data.sqlclient.sqlcommand.prepare.aspx in the .NET Framework Class Library"
msgstr "* \".NET Çerçeve Sınıf Kütüphanesinde SqlCommand.Prepare\":http://msdn.microsoft.com/en-us/library/system.data.sqlclient.sqlcommand.prepare.aspx"

#: s/java.textile.tt2:15
msgid "* Add some narrative\n"
msgstr "* Açıklama ekle\n"

#: s/dotnet.textile.tt2:14
msgid ""
"* Add some narrative\n"
"* Show code examples"
msgstr ""
"* Açıklama ekle\n"
"* Kod örneklerini göster"

#: s/python.textile.tt2:19
#: s/ruby.textile.tt2:19
#: s/scheme.textile.tt2:16
msgid "* Add some narrative.\n"
msgstr "* Açıklama ekle.\n"

#: s/index.textile.tt2:19
msgid ""
"* Do not create SQL statements that include outside data.\n"
"* Use parameterized SQL calls."
msgstr ""
"* Dışarıdan veri içeren SQL ifadeleri üretme.\n"
"* Parametreli SQL çağrıları kullan."

#: s/index.textile.tt2:52
msgid ""
"* Explain why creating code from outside data is bad.\n"
"* Potential speed win when reusing prepared statements."
msgstr ""
"* Dış veriden kod üretmenin neden hatalı olduğunu açıkla.\n"
"* Parametreli ifadeler kullanıldığında olası hız kazanımı."

#: s/index.textile.tt2:40
msgid ""
"* Fork the \"bobby-tables repository at github\":http://github.com/petdance/bobby-tables, make your changes, and send me a pull request.\n"
"* Add an issue in the \"issue tracker\":http://github.com/petdance/bobby-tables/issues.\n"
"* Email me, Andy Lester, at andy at petdance.com."
msgstr ""
"* \"Github' daki bobby-tables deposunu\":http://github.com/petdance/bobby-tables kopyalayın, değişikliklerinizi yapın ve bana, değişiklikleri eklemem için bir istek gönderin.\n"
"* \"Sorun izleyicisinde\":http://github.com/petdance/bobby-tables/issues bir sorun oluşturun.\n"
"* Bana, Andy Lester'e, eposta gönderin: andy et petdance.com."

#: s/php.textile.tt2:11
msgid "*However*, you should probably be using an abstraction layer.  The \"ODBC\":http://php.net/manual/en/book.uodbc.php and \"PDO\":http://www.php.net/manual/en/book.pdo.php extensions both support parameterization and multiple databases:"
msgstr "*Ancak*, bir soyutlama katmanı kullanmanız daha doğru olacaktır. \"ODBC\":http://php.net/manual/en/book.uodbc.php ve \"PDO\":http://www.php.net/manual/en/book.pdo.php uzantılarının her ikiside parametre geçmeyi ve birden çok veritabanını desteklemektedir:"

#: s/php.textile.tt2:61
msgid ""
"// insert one row\n"
"$name = 'one';\n"
"$value = 1;\n"
"$stmt->execute();\n"
"</code>"
msgstr ""
"// bir satır ekle\n"
"$name = 'one';\n"
"$value = 1;\n"
"$stmt->execute();\n"
"</code>"

#: s/csharp.textile.tt2:13
msgid ""
"// userName is some string valued user input variable\n"
"userNameParam.Value = userName;\n"
"</code>"
msgstr ""
"// userName, değerini kullanıcı girdisinden alan bir değişken\n"
"userNameParam.Value = userName;\n"
"</code>"

#: s/plsql.textile.tt2:114
#: s/plsql.textile.tt2:48
msgid "</code>"
msgstr "</code>"

#: s/coldfusion.textile.tt2:19
msgid ""
"<code>\n"
"  &lt;cfscript>\n"
"    var myQuery = new Query(sql=\"\n"
"      SELECT FirstName, LastName, Phone\n"
"      FROM   tblUser\n"
"      WHERE  Status = :status\n"
"    \");\n"
"    myQuery.addParam(\n"
"      name      = \"status\",\n"
"      value     = form.status,\n"
"      cfsqltype = \"cf_sql_varchar\"\n"
"    );\n"
"    var rawQuery = myQuery.execute().getResult();\n"
"  &lt;/cfscript>\n"
"</code>\n"
msgstr ""
"<code>\n"
"  &lt;cfscript>\n"
"    var myQuery = new Query(sql=\"\n"
"      SELECT FirstName, LastName, Phone\n"
"      FROM   tblUser\n"
"      WHERE  Status = :status\n"
"    \");\n"
"    myQuery.addParam(\n"
"      name      = \"status\",\n"
"      value     = form.status,\n"
"      cfsqltype = \"cf_sql_varchar\"\n"
"    );\n"
"    var rawQuery = myQuery.execute().getResult();\n"
"  &lt;/cfscript>\n"
"</code>\n"

#: s/python.textile.tt2:5
msgid ""
"<code>\n"
"# Do NOT do it this way.\n"
"cmd = \"update people set name='%s' where id='%s'\" % (name, id)\n"
"curs.execute(cmd)\n"
"</code>"
msgstr ""
"<code>\n"
"# Bu şekilde yapmayın.\n"
"cmd = \"update people set name='%s' where id='%s'\" % (name, id)\n"
"curs.execute(cmd)\n"
"</code>"

#: s/php.textile.tt2:27
msgid ""
"<code>\n"
"$dbConnection = NewADOConnection($connectionString);\n"
"$sqlResult = $dbConnection->Execute(\n"
"    'SELECT user_id,first_name,last_name FROM users WHERE username=? AND password=?',\n"
"    array($_REQUEST['username'], sha1($_REQUEST['password'])\n"
");\n"
"</code>"
msgstr ""
"<code>\n"
"$dbConnection = NewADOConnection($connectionString);\n"
"$sqlResult = $dbConnection->Execute(\n"
"    'SELECT user_id,first_name,last_name FROM users WHERE username=? AND password=?',\n"
"    array($_REQUEST['username'], sha1($_REQUEST['password'])\n"
");\n"
"</code>"

#: s/php.textile.tt2:55
msgid ""
"<code>\n"
"$dbh = new PDO('mysql:dbname=testdb;host=127.0.0.1', $user, $password);\n"
"$stmt = $dbh->prepare('INSERT INTO REGISTRY (name, value) VALUES (:name, :value)');\n"
"$stmt->bindParam(':name', $name);\n"
"$stmt->bindParam(':value', $value);"
msgstr ""
"<code>\n"
"$dbh = new PDO('mysql:dbname=testdb;host=127.0.0.1', $user, $password);\n"
"$stmt = $dbh->prepare('INSERT INTO REGISTRY (name, value) VALUES (:name, :value)');\n"
"$stmt->bindParam(':name', $name);\n"
"$stmt->bindParam(':value', $value);"

#: s/php.textile.tt2:69
msgid ""
"<code>\n"
"$dbh = new PDO('mysql:dbname=testdb;host=127.0.0.1', $user, $password);\n"
"$stmt = $dbh->prepare('UPDATE people SET name = :new_name WHERE id = :id');\n"
"$stmt->execute( array('new_name' => $name, 'id' => $id) );\n"
"</code>\n"
msgstr ""
"<code>\n"
"$dbh = new PDO('mysql:dbname=testdb;host=127.0.0.1', $user, $password);\n"
"$stmt = $dbh->prepare('UPDATE people SET name = :new_name WHERE id = :id');\n"
"$stmt->execute( array('new_name' => $name, 'id' => $id) );\n"
"</code>\n"

#: s/php.textile.tt2:44
msgid ""
"<code>\n"
"$res = odbc_exec($conn, 'SELECT * FROM users WHERE email = ?', array($email));"
msgstr ""
"<code>\n"
"$res = odbc_exec($conn, 'SELECT * FROM users WHERE email = ?', array($email));"

#: s/php.textile.tt2:5
msgid ""
"<code>\n"
"$result = pg_query_params( $dbh, 'SELECT * FROM users WHERE email = $1', array($email) );\n"
"</code>"
msgstr ""
"<code>\n"
"$result = pg_query_params( $dbh, 'SELECT * FROM users WHERE email = $1', array($email) );\n"
"</code>"

#: s/perl.textile.tt2:5
msgid ""
"<code>\n"
"$sth = $dbh->prepare(\"SELECT * FROM users WHERE email = ?\");\n"
"foreach my $email (@emails) {\n"
"    $sth->execute($email);\n"
"    $row = $sth->fetchrow_hashref;\n"
"    [...]\n"
"}\n"
"</code>"
msgstr ""
"<code>\n"
"$sth = $dbh->prepare(\"SELECT * FROM users WHERE email = ?\");\n"
"foreach my $email (@emails) {\n"
"    $sth->execute($email);\n"
"    $row = $sth->fetchrow_hashref;\n"
"    [...]\n"
"}\n"
"</code>"

#: s/php.textile.tt2:17
msgid ""
"<code>\n"
"$stmt = $db->prepare('update people set name = ? where id = ?');\n"
"$stmt->bind_param('si',$name,$id);\n"
"$stmt->execute();\n"
"</code>"
msgstr ""
"<code>\n"
"$stmt = $db->prepare('update people set name = ? where id = ?');\n"
"$stmt->bind_param('si',$name,$id);\n"
"$stmt->execute();\n"
"</code>"

#: s/php.textile.tt2:37
msgid ""
"<code>\n"
"$stmt = odbc_prepare( $conn, 'SELECT * FROM users WHERE email = ?' );\n"
"$success = odbc_execute( $stmt, array($email) );\n"
"</code>"
msgstr ""
"<code>\n"
"$stmt = odbc_prepare( $conn, 'SELECT * FROM users WHERE email = ?' );\n"
"$success = odbc_execute( $stmt, array($email) );\n"
"</code>"

#: s/coldfusion.textile.tt2:5
msgid ""
"<code>\n"
"&lt;cfquery name=\"queryTest\">\n"
"SELECT FirstName, LastName, Phone\n"
"FROM   tblUser\n"
"WHERE  Status =\n"
"    &lt;cfqueryparam cfsqltype=\"CF_SQL_VARCHAR\" value=\"#form.status#\">\n"
"&lt;/cfquery>\n"
"</code>"
msgstr ""
"<code>\n"
"&lt;cfquery name=\"queryTest\">\n"
"SELECT FirstName, LastName, Phone\n"
"FROM   tblUser\n"
"WHERE  Status =\n"
"    &lt;cfqueryparam cfsqltype=\"CF_SQL_VARCHAR\" value=\"#form.status#\">\n"
"&lt;/cfquery>\n"
"</code>"

#: s/scheme.textile.tt2:7
msgid ""
"<code>\n"
"(define DB (sqlite3:open  \"myexample.db\"))\n"
"(sqlite3:exec DB \"INSERT INTO Person(name) VALUES(?)\" \"Luke Skywalker\")\n"
"(sqlite3:for-each-row print DB \"SELECT id,name FROM Person WHERE id=?\" 3)\n"
"(define adults (sqlite3:map-row DB \"SELECT name FROM Person WHERE age >= ?\" 18)\n"
"</code>"
msgstr ""
"<code>\n"
"(define DB (sqlite3:open  \"myexample.db\"))\n"
"(sqlite3:exec DB \"INSERT INTO Person(name) VALUES(?)\" \"Luke Skywalker\")\n"
"(sqlite3:for-each-row print DB \"SELECT id,name FROM Person WHERE id=?\" 3)\n"
"(define adults (sqlite3:map-row DB \"SELECT name FROM Person WHERE age >= ?\" 18)\n"
"</code>"

#: s/plsql.textile.tt2:122
#: s/plsql.textile.tt2:173
msgid ""
"<code>\n"
"ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD HH24:MI:SS';"
msgstr ""
"<code>\n"
"ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD HH24:MI:SS';"

#: s/plsql.textile.tt2:147
#: s/plsql.textile.tt2:200
msgid ""
"<code>\n"
"ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD\"SUPRISE!\"';\n"
"SELECT COLUMN_VALUE AS \"REGULARS\" FROM TABLE(users_since(sysdate - 30));"
msgstr ""
"<code>\n"
"ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD\"SUPRISE!\"';\n"
"SELECT COLUMN_VALUE AS \"REGULARS\" FROM TABLE(users_since(sysdate - 30));"

#: s/plsql.textile.tt2:54
msgid ""
"<code>\n"
"CREATE OR REPLACE FUNCTION user_access (\n"
"    p_uname IN VARCHAR2\n"
") RETURN date AS\n"
"    v_accessed_at date;\n"
"    v_query constant varchar2(32767) := \n"
"      'SELECT accessed_at FROM users WHERE username = ''' || p_uname || '''';\n"
"BEGIN\n"
"    EXECUTE IMMEDIATE v_query INTO v_accessed_at;\n"
"    RETURN v_accessed_at;\n"
"END;\n"
"/\n"
"</code>"
msgstr ""
"<code>\n"
"CREATE OR REPLACE FUNCTION user_access (\n"
"    p_uname IN VARCHAR2\n"
") RETURN date AS\n"
"    v_accessed_at date;\n"
"    v_query constant varchar2(32767) := \n"
"      'SELECT accessed_at FROM users WHERE username = ''' || p_uname || '''';\n"
"BEGIN\n"
"    EXECUTE IMMEDIATE v_query INTO v_accessed_at;\n"
"    RETURN v_accessed_at;\n"
"END;\n"
"/\n"
"</code>"

#: s/plsql.textile.tt2:86
msgid ""
"<code>\n"
"CREATE OR REPLACE FUNCTION user_access (\n"
"    p_uname IN VARCHAR2\n"
") RETURN date AS\n"
"    v_accessed_at date;\n"
"    v_query constant varchar2(32767) := \n"
"      'SELECT accessed_at FROM users WHERE username = :a';\n"
"BEGIN\n"
"    EXECUTE IMMEDIATE v_query INTO v_accessed_at USING p_uname;\n"
"    RETURN v_accessed_at;\n"
"END;\n"
"/\n"
"</code>"
msgstr ""
"<code>\n"
"CREATE OR REPLACE FUNCTION user_access (\n"
"    p_uname IN VARCHAR2\n"
") RETURN date AS\n"
"    v_accessed_at date;\n"
"    v_query constant varchar2(32767) := \n"
"      'SELECT accessed_at FROM users WHERE username = :a';\n"
"BEGIN\n"
"    EXECUTE IMMEDIATE v_query INTO v_accessed_at USING p_uname;\n"
"    RETURN v_accessed_at;\n"
"END;\n"
"/\n"
"</code>"

#: s/plsql.textile.tt2:22
msgid ""
"<code>\n"
"CREATE OR REPLACE FUNCTION user_access (\n"
"    p_uname IN VARCHAR2\n"
") RETURN date AS\n"
"    v_accessed_at date;\n"
"BEGIN\n"
"    SELECT accessed_at INTO v_accessed_at FROM users WHERE username = p_uname;\n"
"    RETURN v_accessed_at;\n"
"END;\n"
"/\n"
"</code>"
msgstr ""
"<code>\n"
"CREATE OR REPLACE FUNCTION user_access (\n"
"    p_uname IN VARCHAR2\n"
") RETURN date AS\n"
"    v_accessed_at date;\n"
"BEGIN\n"
"    SELECT accessed_at INTO v_accessed_at FROM users WHERE username = p_uname;\n"
"    RETURN v_accessed_at;\n"
"END;\n"
"/\n"
"</code>"

#: s/plsql.textile.tt2:5
msgid ""
"<code>\n"
"CREATE TABLE users (\n"
"    username VARCHAR2(8) UNIQUE,\n"
"    accessed_at DATE,\n"
"    superuser NUMBER(1,0)\n"
");"
msgstr ""
"<code>\n"
"CREATE TABLE users (\n"
"    username VARCHAR2(8) UNIQUE,\n"
"    accessed_at DATE,\n"
"    superuser NUMBER(1,0)\n"
");"

#: s/ruby.textile.tt2:5
msgid ""
"<code>\n"
"Person.find :all, :conditions => ['id = ? or name = ?', id, name]\n"
"</code>"
msgstr ""
"<code>\n"
"Person.find :all, :conditions => ['id = ? or name = ?', id, name]\n"
"</code>"

#: s/ruby.textile.tt2:11
msgid ""
"<code>\n"
"Person.find_by_sql ['SELECT * from persons WHERE name = ?', name]\n"
"</code>"
msgstr ""
"<code>\n"
"Person.find_by_sql ['SELECT * from persons WHERE name = ?', name]\n"
"</code>"

#: s/java.textile.tt2:3
msgid ""
"<code>\n"
"PreparedStatement statement = connection.prepareStatement(\n"
"    \"update people set name = ? where id = ?\");\n"
"statement.setString(1, name);\n"
"statement.setString(2, id);\n"
"statement.execute();\n"
"</code>"
msgstr ""
"<code>\n"
"PreparedStatement statement = connection.prepareStatement(\n"
"    \"update people set name = ? where id = ?\");\n"
"statement.setString(1, name);\n"
"statement.setString(2, id);\n"
"statement.execute();\n"
"</code>"

#: s/plsql.textile.tt2:100
#: s/plsql.textile.tt2:34
#: s/plsql.textile.tt2:68
msgid ""
"<code>\n"
"SELECT user_access('janihur')\n"
"  AS \"JANIHUR LAST SEEN\" FROM DUAL;"
msgstr ""
"<code>\n"
"SELECT user_access('janihur')\n"
"  AS \"JANIHUR LAST SEEN\" FROM DUAL;"

#: s/csharp.textile.tt2:5
msgid ""
"<code>\n"
"SqlCommand userInfoQuery = new SqlCommand(\n"
"    \"SELECT id, name, email FROM users WHERE id = @UserName\",\n"
"    someSqlConnection);"
msgstr ""
"<code>\n"
"SqlCommand userInfoQuery = new SqlCommand(\n"
"    \"SELECT id, name, email FROM users WHERE id = @UserName\",\n"
"    someSqlConnection);"

#: s/csharp.textile.tt2:19
msgid ""
"<code>\n"
"String username = \"joe.bloggs\";\n"
"SqlCommand sqlQuery = new SqlCommand(\"SELECT user_id, first_name,last_name FROM users WHERE username = ?username\",  sqlConnection);\n"
"sqlQuery.Parameters.AddWithValue(\"?username\", username);\n"
"</code>\n"
msgstr ""
"<code>\n"
"String username = \"joe.bloggs\";\n"
"SqlCommand sqlQuery = new SqlCommand(\"SELECT user_id, first_name,last_name FROM users WHERE username = ?username\",  sqlConnection);\n"
"sqlQuery.Parameters.AddWithValue(\"?username\", username);\n"
"</code>\n"

#: s/python.textile.tt2:13
msgid ""
"<code>\n"
"curs.execute('update people set name=:1 where id=:2', [name, id])\n"
"</code>"
msgstr ""
"<code>\n"
"curs.execute('update people set name=:1 where id=:2', [name, id])\n"
"</code>"

#: s/asp.textile.tt2:3
msgid ""
"<code>\n"
"objCmd.CommandType = adCmdText;\n"
"objCmd.CommandText = \"UPDATE members SET photo = @filename WHERE memberID = @memberID\";\n"
"objCmd.Parameters.Append(objCmd.CreateParameter(\"@memberID\", adInteger, adParamInput, 4, memberid ));\n"
"objCmd.Parameters.Append(objCmd.CreateParameter(\"@filename\", adVarChar, adParamInput, 510, fileName));\n"
"objCmd.Execute(adExecuteNoRecords);\n"
"gblDelobjParams(objCmd);\n"
"</code>"
msgstr ""
"<code>\n"
"objCmd.CommandType = adCmdText;\n"
"objCmd.CommandText = \"UPDATE members SET photo = @filename WHERE memberID = @memberID\";\n"
"objCmd.Parameters.Append(objCmd.CreateParameter(\"@memberID\", adInteger, adParamInput, 4, memberid ));\n"
"objCmd.Parameters.Append(objCmd.CreateParameter(\"@filename\", adVarChar, adParamInput, 510, fileName));\n"
"objCmd.Execute(adExecuteNoRecords);\n"
"gblDelobjParams(objCmd);\n"
"</code>"

#: s/delphi.textile.tt2:5
msgid ""
"<code>\n"
"query.SQL.Text := 'update people set name=:Name where id=:ID';\n"
"query.Prepare;\n"
"query.ParamByName( 'Name' ).AsString := name;\n"
"query.ParamByName( 'ID' ).AsInteger := id;\n"
"query.ExecSQL;\n"
"</code>\n"
msgstr ""
"<code>\n"
"query.SQL.Text := 'update people set name=:Name where id=:ID';\n"
"query.Prepare;\n"
"query.ParamByName( 'Name' ).AsString := name;\n"
"query.ParamByName( 'ID' ).AsInteger := id;\n"
"query.ExecSQL;\n"
"</code>\n"

#: s/index.textile.tt2:3
msgid ""
"<p>\n"
"<a href=\"http://xkcd.com/327/\"><img src=\"img/xkcd.png\" alt=\"xkcd Bobby Tables Cartoon\" /></a>\n"
"<a href=\"http://xkcd.com/327/\">From the comic strip xkcd</a><br />\n"
"<b>School</b>: \"Hi, this is your son's school.  We're having some computer trouble.\"<br />\n"
"<b>Mom</b>: \"Oh, dear -- Did he break something?\"<br />\n"
"<b>School</b>: \"In a way.  Did you really name your son Robert'); DROP TABLE Students;-- ?\"<br />\n"
"<b>Mom</b>: \"Oh.  Yes.  Little Bobby Tables we call him.\"<br />\n"
"<b>School</b>: \"Well, we've lost this year's student records.  I hope you're happy.\"<br />\n"
"<b>Mom</b>: \"And I hope you've learned to sanitize your database inputs.\"<br />\n"
"(title text: \"Her daughter is named Help I'm trapped in a driver's license factory.\")\n"
"</p>"
msgstr ""
"<p>\n"
"<a href=\"http://xkcd.com/327/\"><img src=\"img/xkcd.png\" alt=\"xkcd Bobby Tables Karikatürü\" /></a>\n"
"<a href=\"http://xkcd.com/327/\">xkcd karikatür bandından</a><br />\n"
"<b>Okul</b>: \"Merhaba, oğlunuzun okulundan arıyoruz. Bilgisayarlarla ilgili bir sorunumuz var.\"<br />\n"
"<b>Anne</b>: \"Hay Allah -- Bir şeyi mi kırdı?\"<br />\n"
"<b>Okul</b>: \"Öyle de denebilir. Gerçekten oğlunuza Robert'); DROP TABLE Students;-- adını mı verdiniz?\"<br />\n"
"<b>Anne</b>: \"Ah. Evet. Ona hep Minik Bobby Tablolar diye sesleniriz.\"<br />\n"
"<b>Okul</b>: \"Pekâlâ, bu yılki öğrenci kayıtlarını kaybettik. Umarım mutlusunuzdur.\"<br />\n"
"<b>Anne</b>: \"Umarım sizde veritabanı girdilerinizi temizlemeyi öğrenmişsinizdir.\"<br />\n"
"(başlık metni: \"Kızının adı Yardım edin bir araba plakası fabrikasında kilitli kaldım.\")\n"
"</p>"

#: s/php.textile.tt2:25
msgid "ADODB provides a way to prepare, bind and execute all in the same method call."
msgstr "ADODB' nin aynı yöntem çağrısı içinde hazırlama, bağlama ve yürutme için desteği vardır"

#: s/plsql.textile.tt2:160
msgid ""
"ALTER SESSION SET NLS_DATE_FORMAT = '\"'' or superuser = 1 or username = ''whocares\"';\n"
"SELECT COLUMN_VALUE AS \"SUPERUSER IS\" FROM TABLE(users_since(sysdate - 30));"
msgstr ""
"ALTER SESSION SET NLS_DATE_FORMAT = '\"'' or superuser = 1 or username = ''whocares\"';\n"
"SELECT COLUMN_VALUE AS \"SUPERUSER IS\" FROM TABLE(users_since(sysdate - 30));"

#: s/asp.textile.tt2:14
msgid "Add some narrative\n"
msgstr "Biraz açıklama ekle\n"

#: s/postgresql.textile.tt2:3
msgid "All of PostgreSQL's \"procedural languages\":http://www.postgresql.org/docs/current/static/xplang.html, which allow you to write functions and procedures inside the database, allow you to execute arbitrary SQL statements."
msgstr "PostgreSQL'in tüm \"yordamsal dilleri\":http://www.postgresql.org/docs/current/static/xplang.html, size veritabanı içinde yordam ve prosedür ve keyfi SQL ifadeleri yazma olanağı verir."

#: s/plsql.textile.tt2:118
msgid "Also NLS session parameters (NLS_DATE_FORMAT, NLS_TIMESTAMP_FORMAT, NLS_TIMESTAMP_TZ_FORMAT, NLS_NUMERIC_CHARACTER) can be used to modify or inject SQL statements."
msgstr "Ayrıca, NLS oturum parametreleri (NLS_DATE_FORMAT, NLS_TIMESTAMP_FORMAT, NLS_TIMESTAMP_TZ_FORMAT, NLS_NUMERIC_CHARACTER) SQL ifadelerini değiştirmek veya aşılamak için kullanılabilirler."

#: s/php.textile.tt2:67
msgid "And a shorter way to pass things in."
msgstr "Ve değişik şeyleri geçmek için daha kısa bir yol."

#: s/dotnet.textile.tt2:7
msgid "Articles:"
msgstr "Makaleler:"

#: tt/header.tt:6
msgid "Bobby Tables: A guide to preventing SQL injection"
msgstr "Bobby Tables: SQL aşısını önlemek için bir kılavuz"

#: s/postgresql.textile.tt2:42
msgid "Both the @p_column@ and the @p_value@ arguments are vulnerable. The way to avoid this problem is to use the @quote_ident()@ function to quote an SQL identifier (@p_column@ in this case) and @quote_lteral()@ to quote a literal value:"
msgstr "@p_column@ ve @p_value@ değişkenlerinin her ikiside saldırıya açıktırlar. Bu durumu engellemenin yolu @quote_ident()@ yordamını, bir SQL tanımlayıcısını (bu örnekte @p_column@) tırnaklamakta kullanmak ve @quote_lteral()@ yordamını da kalıp deyimler üzerinde kullanmaktır:"

#: s/postgresql.textile.tt2:25
msgid "But sometimes you have to do more complicated things. Perhaps you dynamically add @WHERE@ clause expressions based on input. In such cases, you'll end up using PL/pgSQL's @EXECUTE@ syntax. Here's an example with an SQL injection vulnerability:"
msgstr "Fakat, bazen daha karmaşık işler yapmanız gerekebilir. Örneğin, girdiye bağlı olarak devingen @WHERE@ ifadeleri eklemeniz gerekebilir. Bu tür durumlarda, PL/pgSQL' in @EXECUTE@ sözdizimini kullanmak durumunda kalırsınız. Şimdiki örnek bir SQL aşı saldırısına açıktır:"

#: s/plsql.textile.tt2:128
msgid ""
"CREATE OR REPLACE FUNCTION users_since(\n"
"    p_since IN DATE\n"
") RETURN userlist_t PIPELINED AS\n"
"    v_users userlist_t;\n"
"    v_query constant varchar2(32767) := \n"
"      'SELECT username FROM users WHERE superuser = 0 and accessed_at > ''' || p_since || ''' order by accessed_at desc';\n"
"BEGIN\n"
"    DBMS_OUTPUT.PUT_LINE('v_query = ' || v_query);\n"
"    EXECUTE IMMEDIATE v_query BULK COLLECT INTO v_users;"
msgstr ""
"CREATE OR REPLACE FUNCTION users_since(\n"
"    p_since IN DATE\n"
") RETURN userlist_t PIPELINED AS\n"
"    v_users userlist_t;\n"
"    v_query constant varchar2(32767) := \n"
"      'SELECT username FROM users WHERE superuser = 0 and accessed_at > ''' || p_since || ''' order by accessed_at desc';\n"
"BEGIN\n"
"    DBMS_OUTPUT.PUT_LINE('v_query = ' || v_query);\n"
"    EXECUTE IMMEDIATE v_query BULK COLLECT INTO v_users;"

#: s/plsql.textile.tt2:179
msgid ""
"CREATE OR REPLACE FUNCTION users_since(\n"
"    p_since IN DATE\n"
") RETURN userlist_t PIPELINED AS\n"
"    v_users userlist_t;\n"
"    v_query constant varchar2(32767) := \n"
"      'SELECT username FROM users WHERE superuser = 0 and accessed_at > ''' || to_char(p_since, 'YYYY-MM-DD') || ''' order by accessed_at desc';\n"
"BEGIN\n"
"    DBMS_OUTPUT.PUT_LINE('v_query = ' || v_query);\n"
"    EXECUTE IMMEDIATE v_query BULK COLLECT INTO v_users;"
msgstr ""
"CREATE OR REPLACE FUNCTION users_since(\n"
"    p_since IN DATE\n"
") RETURN userlist_t PIPELINED AS\n"
"    v_users userlist_t;\n"
"    v_query constant varchar2(32767) := \n"
"      'SELECT username FROM users WHERE superuser = 0 and accessed_at > ''' || to_char(p_since, 'YYYY-MM-DD') || ''' order by accessed_at desc';\n"
"BEGIN\n"
"    DBMS_OUTPUT.PUT_LINE('v_query = ' || v_query);\n"
"    EXECUTE IMMEDIATE v_query BULK COLLECT INTO v_users;"

#: s/plsql.textile.tt2:125
#: s/plsql.textile.tt2:176
msgid ""
"CREATE OR REPLACE TYPE userlist_t AS TABLE OF VARCHAR2(8);\n"
"/"
msgstr ""
"CREATE OR REPLACE TYPE userlist_t AS TABLE OF VARCHAR2(8);\n"
"/"

#: s/index.textile.tt2:38
msgid "Don't see a language that you'd like to see represented?  Please let me know if you have updates or additions through one of these methods, in decreasing order of preference."
msgstr "Sunulmasını istediğiniz dillerden birisini göremediniz mi? Lütfen, azalan önem sırasına göre, güncelleme veya eklemelerinizi şu yöntemlerden birisiyle bana bildirin."

#: s/plsql.textile.tt2:3
msgid "Examples assume the following table structure:"
msgstr "Örnekler, şu tablo yapısının varolduğunu öngörmektedir:"

#: s/perl.textile.tt2:16
msgid "Explain Perl's taint mode and how DBI supports taint mode, both inbound and outbound.\n"
msgstr "Perl'ün leke kipini ve DBI' ın buna desteğini her iki yönde de açıkla.\n"

#: s/postgresql.textile.tt2:17
msgid "For such a simple case, you're actually better off writing a pure SQL function:"
msgstr "Bu kadar basit bir durum için, saf bir SQL fonksiyonu yazmanız daha iyi olacaktır."

#: tt/footer.tt:6
msgid "Fork me on GitHub"
msgstr "Beni GitHub' da koyala"

#: s/csharp.textile.tt2:3
#, perl-maketext-format
msgid "From the \"C# Online\":http://en.csharp-online.net/ wiki page \"ASP.NET Security Hacks--Avoiding SQL Injection\":http://en.csharp-online.net/ASP.NET_Security_Hacks%E2%80%94Avoiding_SQL_Injection"
msgstr "\"C# Online\":http://en.csharp-online.net/ wiki sayfasından \"ASP.NET Güvenlik Yöntemleri--SQL aşısından kaçınmak\":http://en.csharp-online.net/ASP.NET_Security_Hacks%E2%80%94Avoiding_SQL_Injection"

#: s/index.textile.tt2:46
msgid "Help translate this site! There are only 100 phrases. No programming necessary."
msgstr "Bu siteyi çevirmek için yardım edin! Sadece 100 paragraf var. Herhangi bir programlama gerekmiyor."

#: s/php.textile.tt2:53
msgid "Here's the long way to do bind parameters."
msgstr "Şimdide, parametreleri bağlamak için uzun bir yöntem."

#: s/plsql.textile.tt2:12
msgid ""
"INSERT INTO users VALUES ('janihur',  sysdate,      0);\n"
"INSERT INTO users VALUES ('petdance', sysdate - 12, 1);\n"
"INSERT INTO users VALUES ('albundy',  sysdate - 3,  0);\n"
"INSERT INTO users VALUES ('donduck',  sysdate - 18, 0);\n"
"</code>"
msgstr ""
"INSERT INTO users VALUES ('janihur',  sysdate,      0);\n"
"INSERT INTO users VALUES ('petdance', sysdate - 12, 1);\n"
"INSERT INTO users VALUES ('albundy',  sysdate - 3,  0);\n"
"INSERT INTO users VALUES ('donduck',  sysdate - 18, 0);\n"
"</code>"

#: s/coldfusion.textile.tt2:3
msgid "In ColdFusion there is a tag called @cfqueryparam@ that should be used whenever writing inline queries."
msgstr "ColdFusion' da, satır içi sorgu yazmanız gerektiğinde, kullanmanız gereken @cfqueryparam@ adli bir etiket mevcuttur."

#: s/ruby.textile.tt2:3
msgid "In Ruby on Rails using \"ActiveRecord\":http://guides.rubyonrails.org/active_record_querying.html:"
msgstr "Ruby on Rails' le \"ActiveRecord\":http://guides.rubyonrails.org/active_record_querying.html kullanarak:"

#: s/plsql.textile.tt2:120
msgid "In next example data type conversion takes place when @p_since@ is implicitly converted to a string for concatenation. Note how the value of NLS_DATE_FORMAT affects to the query string in users_since()-function !"
msgstr "Sonraki örnekte veri türü dönüşümü, @p_since@ değeri imalı olarak zincirleme için dizgiye dönüştürüldüğünde, ortaya çıkıyor. NLS_DATE_FORMAT değerinin users_since()-yordamının içindeki sorgu dizgisini nasıl etkilediğine dikkat edin!"

#: s/plsql.textile.tt2:84
msgid "Instead use bind variables:"
msgstr "Bunun yerine, bağlama değişkenlerini kullanın"

#: s/python.textile.tt2:11
msgid "Instead, do this:"
msgstr "Bunun yerine şunu yapın:"

#: s/postgresql.textile.tt2:59
msgid "It's quite a bit easier to read, too!"
msgstr "Aynı zamanda, okuması da biraz daha kolay!"

#: s/plsql.textile.tt2:104
#: s/plsql.textile.tt2:38
#: s/plsql.textile.tt2:72
msgid ""
"JANIHUR LAST SEEN\n"
"-------------------\n"
"2011-08-03 17:11:24"
msgstr ""
"JANIHUR LAST SEEN\n"
"-------------------\n"
"2011-08-03 17:11:24"

#: s/php.textile.tt2:9
msgid "Note that the query must be in single-quotes or have the @$@ escaped to avoid PHP trying to parse it as a variable."
msgstr "PHP'nin @$@ değerinde bir değişken olarak ayrıştırma yapmaması için sorgunun tek tırnak içine alınması veya bu değerin üzerinde kaçış işlemi yapılması gerektiğine dikkat edin."

#: s/plsql.textile.tt2:198
msgid "Now the value of NLS parameter @NLS_DATE_FORMAT@ is ignored during the query."
msgstr "Artık NLS parametresi @NLS_DATE_FORMAT@ sorgu sırasında görmezden gelinecektir."

#: s/csharp.textile.tt2:17
msgid "Or simpler:"
msgstr "Veya daha basit olarak:"

#: s/php.textile.tt2:42
msgid "Or:"
msgstr "Veya:"

#: s/php.textile.tt2:3
msgid "PHP is a little more disorganized than how \"Perl handles parameters\":./perl.html. The standard \"MySQL extension\":http://php.net/manual/en/book.mysql.php doesn't support parameterization, although the \"PostgreSQL extension\":http://www.php.net/manual/en/book.pgsql.php does:"
msgstr "PHP, \"Perl' ün parametreleri nasıl ele aldığıyla\":./perl.html karşılaştırıldığında, oldukça dağınık gözükür. Standard \"MySQL uzantısı\":http://php.net/manual/en/book.mysql.php parametre kullanmayı desteklemez, fakat \"PostgreSQL uzantısı\":http://www.php.net/manual/en/book.pgsql.php destekler:"

#: s/perl.textile.tt2:3
msgid "Perl's \"DBI\":http://search.cpan.org/dist/DBI, available on the \"CPAN\":http://search.cpan.org, supports parameterized SQL calls.  Both the @do@ method and @prepare@ method support parameters (\"placeholders\", as they call them) for most database drivers. For example:"
msgstr "Perl'ün \"DBI eklentisi\":http://search.cpan.org/dist/DBI, \"CPAN'dan\":http://search.cpan.org elde edilebilir ve parametreli SQL çagrılarını destekler.  @do@ ve @prepare@ yöntemlerinin her ikisi de parametreleri (\"yertutucular\", olarak adlandırılırlar) çoğu veritabanı sürücüsü için desteklerler. Örneğin:"

#: s/plsql.textile.tt2:154
msgid ""
"REGULARS\n"
"--------\n"
"janihur\n"
"albundy\n"
"donduck"
msgstr ""
"REGULARS\n"
"--------\n"
"janihur\n"
"albundy\n"
"donduck"

#: s/plsql.textile.tt2:207
msgid ""
"REGULARS\n"
"--------\n"
"janihur\n"
"albundy\n"
"donduck\n"
"</code>\n"
msgstr ""
"REGULARS\n"
"--------\n"
"janihur\n"
"albundy\n"
"donduck\n"
"</code>\n"

#: s/coldfusion.textile.tt2:16
msgid ""
"Recent versions of ColdFusion provide a set of functions to run queries that\n"
"have a slightly different syntax, but still provide parameterized queries."
msgstr ""
"ColdFusion' ın güncel sürümleri bir takım yeni yordamlar içerir ve bunlar\n"
"değişik bir sözdizimine sahip olsalarda, parametreli sorguları desteklerler."

#: s/dotnet.textile.tt2:3
msgid "Reference:"
msgstr "Başvuru:"

#: s/plsql.textile.tt2:108
#: s/plsql.textile.tt2:42
#: s/plsql.textile.tt2:76
msgid ""
"SELECT user_access('whocares'' or superuser = 1 or username = ''whocares') \n"
"  AS \"SUPERUSER LAST SEEN\" FROM DUAL;"
msgstr ""
"SELECT user_access('whocares'' or superuser = 1 or username = ''whocares') \n"
"  AS \"SUPERUSER LAST SEEN\" FROM DUAL;"

#: s/plsql.textile.tt2:166
msgid ""
"SUPERUSE\n"
"--------\n"
"petdance\n"
"</code>"
msgstr ""
"SUPERUSE\n"
"--------\n"
"petdance\n"
"</code>"

#: s/plsql.textile.tt2:111
#: s/plsql.textile.tt2:45
msgid ""
"SUPERUSER LAST SEEN\n"
"-------------------"
msgstr ""
"SUPERUSER LAST SEEN\n"
"-------------------"

#: s/plsql.textile.tt2:79
msgid ""
"SUPERUSER LAST SEEN\n"
"-------------------\n"
"2011-07-22 17:11:24\n"
"</code>"
msgstr ""
"SUPERUSER LAST SEEN\n"
"-------------------\n"
"2011-07-22 17:11:24\n"
"</code>"

#: s/index.textile.tt2:48
msgid "See the instructions at the \"bobby-tables repository at github\":http://github.com/petdance/bobby-tables#readme."
msgstr "\"Github' daki bobby-tables deposu\":http://github.com/petdance/bobby-tables#readme içindeki yönergeleri inceleyin."

#: s/index.textile.tt2:28
msgid "See the sidebar to the left for your specific language."
msgstr "Ilgili diliniz için, lütfen soldaki menüye bakın."

#: s/csharp.textile.tt2:10
msgid ""
"SqlParameter userNameParam = userInfoQuery.Parameters.Add(\"@UserName\",\n"
"    SqlDbType.VarChar, 25 /* max length of field */ );"
msgstr ""
"SqlParameter userNameParam = userInfoQuery.Parameters.Add(\"@UserName\",\n"
"    SqlDbType.VarChar, 25 /* alanın en büyük uzunluğu */ );"

#: s/plsql.textile.tt2:20
msgid "Static SQL leaves no room for SQL injection."
msgstr "Sabit SQL, SQL aşısına yolaçmaz."

#: s/coldfusion.textile.tt2:14
msgid "Stored procedures can be invoked with the @cfstoredproc@ and @cfprocparam@ tags."
msgstr "Saklı yordamlar, @cfstoredproc@ ve @cfprocparam@ etiketleri ile çalıştırılabilirler."

#: s/plsql.textile.tt2:52
msgid "String concatenation opens doors to possible SQL injection exploits:"
msgstr "Dizgi zincirlemesi muhtemel SQL aşısı açıklarına kapı açmaktadır:"

#: s/postgresql.textile.tt2:63
#: s/postgresql.textile.tt2:67
msgid "TODO."
msgstr "YAPILACAK."

#: s/postgresql.textile.tt2:71
msgid "TODO.\n"
msgstr "YAPILACAK.\n"

#: s/index.textile.tt2:57
msgid "Thanks to the following folks for their contributions:"
msgstr "Katkılarından ötürü teşekkür ettiğimiz kişiler:"

#: s/index.textile.tt2:22
msgid "That's it. Don't try to escape invalid characters. Don't try to do it yourself. Learn how to use parameterized statements. Always, every single time."
msgstr "Hepsi bu kadar. Geçersiz damgaları süzgeçten geçirmeye çalışmayın. Bu işi kendi başınıza yapmayın. Parametreli ifadeleri, her zaman nasıl kullanabileceğinizi öğrenin. "

#: s/php.textile.tt2:15
msgid "The MySQL Improved extension handles bound parameters."
msgstr "MySQL gelişmiş uzantısı bağlama parametrelerini işlemektedir."

#: s/plsql.textile.tt2:171
msgid "The remedy is to set the format modifier explicitly: @to_char(p_since, 'YYYY-MM-DD')@."
msgstr "Çaresi biçim değiştiricisini açıkça atamaktır: @to_char(p_since, 'YYYY-MM-DD')@."

#: s/postgresql.textile.tt2:7
msgid "The safest way to execute SQL inside a PL/pgSQL statement is just to do so:"
msgstr "Bir PL/pgSQL ifadesi içinde SQL çalıştırmanın en güvenli yolu şudur:"

#: s/index.textile.tt2:24
msgid "The strip gets one thing crucially wrong.  The answer is not to \"sanitize your database inputs\" yourself.  It is prone to error."
msgstr "Bant bir noktayı tamamen yanlış aktarıyor. Cevap \"girdilerimizi kendimiz temizlemek\" değildir. Bu yöntem hataya açıktır."

#: s/index.textile.tt2:17
msgid "There is only one way to avoid Bobby Tables attacks"
msgstr "Bobby Tables saldırılarını savuşturmak için sadece tek bir yol vardır."

#: s/delphi.textile.tt2:3
msgid "To use a prepared statement, do something like this:"
msgstr "Hazırlanmış bir ifadeyi kullanmak için, şöyle bir şey yapın:"

#: s/ruby.textile.tt2:15
msgid "Using \"Ruby/DBI\":http://ruby-dbi.rubyforge.org/: analog to \"Perl\":./perl.html."
msgstr " \"Ruby/DBI\":http://ruby-dbi.rubyforge.org/: kullanrak. \"Perl\":./perl.html ile benzerdir."

#: s/python.textile.tt2:3
msgid "Using the \"Python DB API\":http://wiki.python.org/moin/DatabaseProgramming/, don't do this:"
msgstr "\"Python DB API\":http://wiki.python.org/moin/DatabaseProgramming/, kullanarak şunu yapmayın:"

#: s/postgresql.textile.tt2:27
msgid ""
"bc. CREATE OR REPLACE FUNCTION get_users(\n"
"    p_column TEXT,\n"
"    p_value  TEXT\n"
") RETURNS SETOF users LANGUAGE plpgsql AS $$\n"
"DECLARE\n"
"    query TEXT := 'SELECT * FROM users';\n"
"BEGIN\n"
"    IF p_column IS NOT NULL THEN\n"
"        query := query || ' WHERE ' || p_column\n"
"              || $_$ = '$_$ || p_value || $_$'$_$;\n"
"    END IF;\n"
"    RETURN QUERY EXECUTE query;\n"
"END;\n"
"$$;"
msgstr ""
"bc. CREATE OR REPLACE FUNCTION get_users(\n"
"    p_column TEXT,\n"
"    p_value  TEXT\n"
") RETURNS SETOF users LANGUAGE plpgsql AS $$\n"
"DECLARE\n"
"    query TEXT := 'SELECT * FROM users';\n"
"BEGIN\n"
"    IF p_column IS NOT NULL THEN\n"
"        query := query || ' WHERE ' || p_column\n"
"              || $_$ = '$_$ || p_value || $_$'$_$;\n"
"    END IF;\n"
"    RETURN QUERY EXECUTE query;\n"
"END;\n"
"$$;"

#: s/postgresql.textile.tt2:44
msgid ""
"bc. CREATE OR REPLACE FUNCTION get_users(\n"
"    p_column TEXT,\n"
"    p_value  TEXT\n"
") RETURNS SETOF users LANGUAGE plpgsql AS $$\n"
"DECLARE\n"
"    query TEXT := 'SELECT * FROM users';\n"
"BEGIN\n"
"    IF p_column IS NOT NULL THEN\n"
"        query := query || ' WHERE ' || quote_ident(p_column)\n"
"              || ' = ' || quote_literal(p_value);\n"
"    END IF;\n"
"    RETURN QUERY EXECUTE query;\n"
"END;\n"
"$$;"
msgstr ""
"bc. CREATE OR REPLACE FUNCTION get_users(\n"
"    p_column TEXT,\n"
"    p_value  TEXT\n"
") RETURNS SETOF users LANGUAGE plpgsql AS $$\n"
"DECLARE\n"
"    query TEXT := 'SELECT * FROM users';\n"
"BEGIN\n"
"    IF p_column IS NOT NULL THEN\n"
"        query := query || ' WHERE ' || quote_ident(p_column)\n"
"              || ' = ' || quote_literal(p_value);\n"
"    END IF;\n"
"    RETURN QUERY EXECUTE query;\n"
"END;\n"
"$$;"

#: s/postgresql.textile.tt2:9
msgid ""
"bc. CREATE OR REPLACE FUNCTION user_access (\n"
"    p_uname TEXT\n"
") RETURNS timestamp language plpgsql AS $$\n"
"BEGIN\n"
"    RETURN accessed_at FROM users WHERE username = p_uname;\n"
"END;\n"
"$$;"
msgstr ""
"bc. CREATE OR REPLACE FUNCTION user_access (\n"
"    p_uname TEXT\n"
") RETURNS timestamp language plpgsql AS $$\n"
"BEGIN\n"
"    RETURN accessed_at FROM users WHERE username = p_uname;\n"
"END;\n"
"$$;"

#: s/postgresql.textile.tt2:19
msgid ""
"bc. CREATE OR REPLACE FUNCTION user_access (\n"
"    p_uname TEXT\n"
") RETURNS timestamp language sql AS $$\n"
"    SELECT accessed_at FROM users WHERE username = $1;\n"
"$$;"
msgstr ""
"bc. CREATE OR REPLACE FUNCTION user_access (\n"
"    p_uname TEXT\n"
") RETURNS timestamp language sql AS $$\n"
"    SELECT accessed_at FROM users WHERE username = $1;\n"
"$$;"

#: s/dotnet.textile.tt2:1
msgid "h1. .NET"
msgstr "h1. .NET"

#: s/asp.textile.tt2:1
msgid "h1. ASP"
msgstr "h1. ASP"

#: s/csharp.textile.tt2:1
msgid "h1. C#"
msgstr "h1. C#"

#: s/coldfusion.textile.tt2:1
msgid "h1. ColdFusion"
msgstr "h1. ColdFusion"

#: s/delphi.textile.tt2:1
msgid "h1. Delphi"
msgstr "h1. Delphi"

#: s/index.textile.tt2:26
msgid "h1. Examples"
msgstr "h1. Örnekler"

#: s/index.textile.tt2:15
msgid "h1. How to avoid Bobby Tables"
msgstr "h1. Bobby Tables' tan kaçınma yolları"

#: s/java.textile.tt2:1
msgid "h1. Java"
msgstr "h1. Java"

#: s/index.textile.tt2:30
msgid "h1. Other random resources"
msgstr "h1. Diğer bazı rasgele kaynaklar"

#: s/php.textile.tt2:1
msgid "h1. PHP"
msgstr "h1. PHP"

#: s/plsql.textile.tt2:1
msgid "h1. PL/SQL"
msgstr "h1. PL/SQL"

#: s/index.textile.tt2:36
msgid "h1. Patches welcome"
msgstr "h1. Yamalarınızı bekliyoruz"

#: s/perl.textile.tt2:1
msgid "h1. Perl"
msgstr "h1. Perl"

#: s/postgresql.textile.tt2:1
msgid "h1. PostgreSQL"
msgstr "h1. PostgreSQL"

#: s/python.textile.tt2:1
msgid "h1. Python"
msgstr "h1. Python"

#: s/ruby.textile.tt2:1
msgid "h1. Ruby"
msgstr "h1. Ruby"

#: s/scheme.textile.tt2:1
msgid "h1. Scheme"
msgstr "h1. Scheme"

#: s/index.textile.tt2:55
msgid "h1. Thanks"
msgstr "h1. Teşekkürler"

#: s/index.textile.tt2:50
msgid "h1. To do"
msgstr "h1. Yapılacaklar"

#: s/index.textile.tt2:44
msgid "h1. Translations also welcome"
msgstr "h1. Çevirilerinizi bekliyoruz"

#: s/index.textile.tt2:1
msgid "h1. Who is Bobby Tables?"
msgstr "h1. Bobby Tables kimdir?"

#: s/plsql.textile.tt2:18
msgid "h2. Always prefer static SQL when possible"
msgstr "h2. Mümkün olduğunca, sabit SQL tercih edin"

#: s/scheme.textile.tt2:3
msgid "h2. CHICKEN Scheme"
msgstr "h2. CHICKEN Scheme"

#: s/plsql.textile.tt2:50
msgid "h2. If you need dynamic SQL avoid string concatenation when possible"
msgstr "h2. Devingen SQL' e ihtiyacınız varsa, mümkün olduğunca dizgi zincirlemesinden kaçının"

#: s/plsql.textile.tt2:116
msgid "h2. Implicit Data Type Conversion Injection"
msgstr "h2. İma Edilen Veri Dönüşümü İle Yapılan Aşı"

#: s/postgresql.textile.tt2:61
msgid "h2. PL/Perl"
msgstr "h2. PL/Perl"

#: s/postgresql.textile.tt2:65
msgid "h2. PL/Python"
msgstr "h2. PL/Python"

#: s/postgresql.textile.tt2:5
msgid "h2. PL/pgSQL"
msgstr "h2. PL/pgSQL"

#: s/asp.textile.tt2:12
#: s/dotnet.textile.tt2:12
#: s/java.textile.tt2:13
#: s/perl.textile.tt2:14
#: s/python.textile.tt2:17
#: s/ruby.textile.tt2:17
#: s/scheme.textile.tt2:14
msgid "h2. To do"
msgstr "h2. Yapılacaklar"

#: s/php.textile.tt2:23
msgid "h2. Using ADODB"
msgstr "h2. ADODB kullanarak"

#: s/php.textile.tt2:13
msgid "h2. Using mysqli"
msgstr "h2. mysqli kullanarak"

#: s/php.textile.tt2:35
msgid "h2. Using the ODBC layer"
msgstr "h2. ODBC katmanıni kullanarak"

#: s/php.textile.tt2:51
msgid "h2. Using the PDO layer"
msgstr "h2. PDO katmanını kullanarak"

#: s/postgresql.textile.tt2:69
msgid "h3. PL/Tcl"
msgstr "h3. PL/Tcl"

#: s/ruby.textile.tt2:9
msgid "or"
msgstr "veya"

#: s/plsql.textile.tt2:204
msgid ""
"v_query = SELECT username FROM users WHERE superuser = 0 and accessed_at >\n"
"'2011-07-04' order by accessed_at desc"
msgstr ""
"v_query = SELECT username FROM users WHERE superuser = 0 and accessed_at >\n"
"'2011-07-04' order by accessed_at desc"

#: s/plsql.textile.tt2:151
msgid ""
"v_query = SELECT username FROM users WHERE superuser = 0 and accessed_at >\n"
"'2011-07-04SUPRISE!' order by accessed_at desc"
msgstr ""
"v_query = SELECT username FROM users WHERE superuser = 0 and accessed_at >\n"
"'2011-07-04SUPRISE!' order by accessed_at desc"

#: s/plsql.textile.tt2:163
msgid ""
"v_query = SELECT username FROM users WHERE superuser = 0 and accessed_at > ''\n"
"or superuser = 1 or username = 'whocares' order by accessed_at desc"
msgstr ""
"v_query = SELECT username FROM users WHERE superuser = 0 and accessed_at > ''\n"
"or superuser = 1 or username = 'whocares' order by accessed_at desc"

